version: '3.8'
services:
  postgres:
    image: postgres:14-alpine # Use a specific version and Alpine for smaller size
    restart: always # Ensure the container restarts automatically
    environment:
      POSTGRES_USER: your_user # Replace with your desired username
      POSTGRES_PASSWORD: your_password # Replace with your desired password
      POSTGRES_DB: your_database # Replace with your desired database name
    ports:
      - 5432:5432 # Expose the PostgreSQL port
    volumes:
      - pgdata:/var/lib/postgresql/data # Use a named volume for data persistence
    healthcheck: # Add a healthcheck
      test: ["CMD-SHELL", "pg_isready -U your_user -d your_database"] #Use the username and database from above
      interval: 10s
      timeout: 5s
      retries: 5
  
  streamlit:
    build:
      context: . # Build from the current directory
      dockerfile: dashboard_development/Dockerfile # Path to your Streamlit Dockerfile.  **Corrected path**
    restart: always
    ports:
      - 8501:8501 # Expose the Streamlit port
    depends_on:
      - postgres # Ensure PostgreSQL is running before Streamlit
    environment: # Pass the PostgreSQL connection details to Streamlit
      POSTGRES_HOST: postgres # Use the service name 'postgres' as the hostname
      POSTGRES_DB: your_database
      POSTGRES_USER: your_user
      POSTGRES_PASSWORD: your_password
    volumes: #Mount the entire project.
      - .:/app
    working_dir: /app

volumes:
  pgdata: